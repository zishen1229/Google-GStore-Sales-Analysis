?strcapture
?str_c
??str_c
library(ggplot2)
library(tidyverse)
library(dplyr)
library(stringr)
library(jsonlite)
library(tidyr)
library(lubridate)
library(maps)
train <- read.csv("train.csv", na = NA)
dim(train)
sapply(train, class)
train[1,]
library(jsonlite)
# Build a function to tidy the data set
tidy <- function(data,data_o){
for (i in 1:4){
first <- str_c(data[,i], collapse = ",")
second <- str_c("[", first, "]")
data_o <- cbind(data_o,fromJSON(second, flatten = TRUE))
}
data_o$fullVisitorId <- as.character(data_o$fullVisitorId)
return(select(data_o, -device, -geoNetwork, -trafficSource, -totals))
}
train_tidy <- tidy(train[,c(3,5,8,9)], train)
dim(train_tidy)
sum(sapply(train_tidy, class) == "logical")
sum(sapply(train_tidy, class) == "character")
sum(sapply(train_tidy, class) == "factor")
sum(sapply(train_tidy, class) == "integer")
# Distinct values of each variable
distinct_value <- sapply(train_tidy,n_distinct)
distinct_value <- as.data.frame(distinct_value)
names(distinct_value) <-"num_distinct_values"
distinct_value <- distinct_value %>%
rownames_to_column("colnames") %>%
mutate(colnames = reorder(colnames, -num_distinct_values))
constant <- filter(distinct_value,num_distinct_values == 1)
names(constant)
head(constant)
constant$colnames
constant
constant$colnames
del <- constant$colnames
del <- as.character(del)
train_tidy_s <- select(train_tidy,-del)
sum(sapply(train_tidy_s, class) == "logical")
sum(sapply(train_tidy_s, class) == "character")
sum(sapply(train_tidy_s, class) == "factor")
sum(sapply(train_tidy_s, class) == "integer")
x <- select(train_tidy_s, -transactionRevenue)
x$channelGrouping <- as.character(x$channelGrouping)
x$sessionId <- as.character(x$sessionId)
sum(sapply(x, class) == "logical")
sum(sapply(x, class) == "character")
sum(sapply(x, class) == "factor")
sum(sapply(x, class) == "integer")
x <- x%>%
mutate(date = ymd(date), visitId = as.character(visitId),
hits = as.integer(hits),pageviews = as.integer(pageviews),
bounces = as.integer(bounces),
newVisits = as.integer(newVisits))
sum(sapply(x, class) == "logical")
sum(sapply(x, class) == "character")
sum(sapply(x, class) == "factor")
sum(sapply(x, class) == "integer")
x <- mutate_all(x,function(a) ifelse(a %in%
c("not available in demo dataset",
"(not provided)",
"(not set)",
"<NA>",
"unknown.unknown",
"(none)"), NA, a))
missing_rate <- sapply(x, function(a) mean(is.na(a)))
missing_rate%>%
as.data.frame()%>%
rename(missing_rate = '.')%>%
rownames_to_column("colnames")%>%
mutate(colnames = reorder(colnames,missing_rate))%>%
ggplot()+
geom_col(aes(colnames, missing_rate))+
coord_flip()
x <- select(train_tidy_s, -transactionRevenue)
x$channelGrouping <- as.character(x$channelGrouping)
x$sessionId <- as.character(x$sessionId)
x <- select(x,-campaignCode)
x <- mutate_all(x,function(a) ifelse(a %in%
c("not available in demo dataset",
"(not provided)",
"(not set)",
"<NA>",
"unknown.unknown",
"(none)"), NA, a))
missing_rate <- sapply(x, function(a) mean(is.na(a)))
missing_rate%>%
as.data.frame()%>%
rename(missing_rate = '.')%>%
rownames_to_column("colnames")%>%
mutate(colnames = reorder(colnames,missing_rate))%>%
ggplot()+
geom_col(aes(colnames, missing_rate))+
coord_flip()
y <- train_tidy_s$transactionRevenue %>%
as.numeric()
y[is.na(y)] <- 0
missing_rate%>%
as.data.frame()%>%
rename(missing_rate = '.')%>%
rownames_to_column("colnames")%>%
mutate(colnames = reorder(colnames,missing_rate))%>%
ggplot()+
geom_col(aes(colnames, missing_rate))+
coord_flip()
missing_rate%>%
as.data.frame()%>%
rename(missing_rate = '.')%>%
rownames_to_column("colnames")%>%
mutate(colnames = reorder(colnames,missing_rate))%>%
ggplot()+
geom_col(aes(colnames, missing_rate))+
coord_flip()
missing_rate%>%
as.data.frame()%>%
rename(missing_rate = '.')%>%
rownames_to_column("colnames")%>%
mutate(colnames = reorder(colnames,missing_rate))%>%
ggplot()+
geom_col(aes(colnames, missing_rate))+
coord_flip()
ggplot(data=x,aes(reorder(channelGrouping,rep(1,length(channelGrouping)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="channelGrouping", y = "visits")
ggplot(data=x,aes(reorder(deviceCategory,rep(1,length(deviceCategory)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="deviceCategory", y = "visits")
x %>%
count(browser, sort=TRUE) %>%
top_n(5) %>%
mutate(browser=reorder(browser, n)) %>%
ggplot(aes(x=browser, y=n)) +
geom_col()+ labs(y = "visits")
ggplot(data=x,aes(reorder(channelGrouping,rep(1,length(channelGrouping)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="channelGrouping", y = "visits")
head(x)
constant$colnames
ggplot(data=x,aes(reorder(channelGrouping,rep(1,length(channelGrouping)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="channelGrouping", y = "visits")
ggplot(data=x,aes(reorder(deviceCategory,rep(1,length(deviceCategory)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="deviceCategory", y = "visits")
x %>%
count(browser, sort=TRUE) %>%
top_n(5) %>%
mutate(browser=reorder(browser, n)) %>%
ggplot(aes(x=browser, y=n)) +
geom_col()+ labs(y = "visits")
ggplot(data=x,aes(reorder(deviceCategory,rep(1,length(deviceCategory)),sum)))+geom_bar()+
theme(axis.text.x = element_text(hjust = 1))+ labs(x="deviceCategory", y = "visits")
x %>%
count(browser, sort=TRUE) %>%
top_n(5) %>%
mutate(browser=reorder(browser, n)) %>%
ggplot(aes(x=browser, y=n)) +
geom_col()+ labs(y = "visits")
x_y %>%
group_by(channelGrouping) %>%
summarize(total_revenue = sum(y)) %>%
mutate(channelGrouping=reorder(channelGrouping, total_revenue)) %>%
ggplot(aes(channelGrouping, log(total_revenue))) +
geom_bar(stat = "identity")
x_y <- cbind(x, y)
x_y %>%
group_by(channelGrouping) %>%
summarize(total_revenue = sum(y)) %>%
mutate(channelGrouping=reorder(channelGrouping, total_revenue)) %>%
ggplot(aes(channelGrouping, log(total_revenue))) +
geom_bar(stat = "identity")
x_y %>%
group_by(deviceCategory) %>%
summarize(total_revenue = sum(y)) %>%
mutate(deviceCategory=reorder(deviceCategory, total_revenue)) %>%
ggplot(aes(deviceCategory, log(total_revenue))) +
geom_bar(stat = "identity")
x_y %>%
group_by(browser) %>%
summarize(total_revenue = sum(y)) %>%
top_n(5) %>%
mutate(browser=reorder(browser, log(total_revenue))) %>%
ggplot(aes(x=browser, y=total_revenue)) +
geom_bar(stat = "identity")
x %>%
bind_cols(as_tibble(y)) %>%
group_by(fullVisitorId)%>%
summarise(y=mean(value)) %>%
ggplot(aes(x = 1:length(fullVisitorId), y)) +
geom_point(alpha=0.4, size=0.8) +
theme_minimal() +
scale_y_continuous(name="revenue") +
scale_x_continuous(name="index") +
theme(legend.position="none")
x %>%
group_by(fullVisitorId)%>%
summarise(y=sum(as.numeric(pageviews))) %>%
ggplot(aes(x = 1:length(fullVisitorId), y)) +
geom_point(alpha=0.4, size=0.8) +
theme_minimal() +
scale_y_continuous(name="pageviews") +
scale_x_continuous(name="index") +
theme(legend.position="none")
x %>%
group_by(fullVisitorId)%>%
summarise(y=sum(as.numeric(hits))) %>%
ggplot(aes(x = 1:length(fullVisitorId), y)) +
geom_point(alpha=0.4, size=0.8) +
theme_minimal() +
scale_y_continuous(name="hits") +
scale_x_continuous(name="index") +
theme(legend.position="none")
x_y %>%
group_by(fullVisitorId) %>%
dplyr::summarise(pageview = sum(as.numeric(pageviews)), revenue = sum(y)) %>%
ggplot(aes(pageview, log(revenue))) +
geom_point()
x_city <- data.frame(city=c("Mountain View","New York","San Francisco","Sunnyvale","San Jose","Los Angeles","Chicago","Seattle","Austin","Santa Clara","Salem","Cambridge","Ann Arbor"), lat=c(37.4001,40.6943,37.7561,37.3846,37.3020,34.1140,41.8373,47.6217,30.3038,37.3646,42.5130,42.3758,37.4001), lng=c(-122.0796,-73.9249,-122.4429,-122.0261,-121.8488,-118.4068,-87.6861,-122.3238,-97.7545,-121.9679,-70.9021,-71.1184,-122.0796),n=c(40659,26228,20206,13008,10210,8637,7430,5002,3782,3162,2224,1582,40659))
data_w %>%
filter(!is.na(city),country == "United States")%>%
dplyr::count(city) %>%
top_n(10) %>%
left_join(.,x_city)%>%
mutate(city=reorder(city, n)) %>%
ggplot(aes(x=lng,y=lat,size=n, color=n)) +
borders("state") +
geom_point()+
labs(title ="Top 10 Cities with the most visits") +
theme(axis.title = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), panel.grid = element_blank())
x_city <- data.frame(city=c("Mountain View","New York","San Francisco","Sunnyvale","San Jose","Los Angeles","Chicago","Seattle","Austin","Santa Clara","Salem","Cambridge","Ann Arbor"), lat=c(37.4001,40.6943,37.7561,37.3846,37.3020,34.1140,41.8373,47.6217,30.3038,37.3646,42.5130,42.3758,37.4001), lng=c(-122.0796,-73.9249,-122.4429,-122.0261,-121.8488,-118.4068,-87.6861,-122.3238,-97.7545,-121.9679,-70.9021,-71.1184,-122.0796),n=c(40659,26228,20206,13008,10210,8637,7430,5002,3782,3162,2224,1582,40659))
x_y %>%
filter(!is.na(city),country == "United States")%>%
dplyr::count(city) %>%
top_n(10) %>%
left_join(.,x_city)%>%
mutate(city=reorder(city, n)) %>%
ggplot(aes(x=lng,y=lat,size=n, color=n)) +
borders("state") +
geom_point()+
labs(title ="Top 10 Cities with the most visits") +
theme(axis.title = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), panel.grid = element_blank())
data_w <- data.frame(x,y)
data_w %>%
group_by(country) %>%
dplyr::summarize(total_revenue = sum(y)) %>%
dplyr::mutate(country=reorder(country, total_revenue)) %>%
top_n(5)%>%
ungroup%>%
ggplot(aes(x = country,y = log(total_revenue), fill = log(total_revenue)>25)) +
geom_col()
x_city <- data.frame(city=c("Mountain View","New York","San Francisco","Sunnyvale","San Jose","Los Angeles","Chicago","Seattle","Austin","Santa Clara","Salem","Cambridge","Ann Arbor"), lat=c(37.4001,40.6943,37.7561,37.3846,37.3020,34.1140,41.8373,47.6217,30.3038,37.3646,42.5130,42.3758,37.4001), lng=c(-122.0796,-73.9249,-122.4429,-122.0261,-121.8488,-118.4068,-87.6861,-122.3238,-97.7545,-121.9679,-70.9021,-71.1184,-122.0796),n=c(40659,26228,20206,13008,10210,8637,7430,5002,3782,3162,2224,1582,40659))
data_w %>%
filter(!is.na(city),country == "United States")%>%
group_by(city) %>%
dplyr::summarize(total_revenue = sum(y)) %>%
top_n(10) %>%
left_join(.,x_city)%>%
mutate(city=reorder(city, total_revenue)) %>%
ggplot(aes(x=lng,y=lat,size=log(total_revenue), color=log(total_revenue))) +
borders("state") +
geom_point()+
labs(title ="Top 10 Cities with the most reveune") +
theme(axis.title = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), panel.grid = element_blank())+
scale_size_continuous(name = "Total Revenue")+
scale_color_continuous(name = "Total Revenue")
data_w %>%
group_by(country) %>%
dplyr::summarize(total_revenue = sum(y)) %>%
dplyr::mutate(country=reorder(country, total_revenue)) %>%
top_n(5)%>%
ungroup%>%
ggplot(aes(x = country,y = log(total_revenue), fill = log(total_revenue)>25)) +
geom_col()+
guides(fill=FALSE)
x %>%
group_by(continent) %>%
mutate(pageviews = as.numeric(pageviews)) %>%
filter(pageviews != "NA", continent != "NA") %>%
summarise(total = sum(pageviews)) %>%
ggplot(aes(x = reorder(continent, -total), y = total)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Page Views")
x %>%
group_by(continent) %>%
mutate(hits = as.numeric(hits)) %>%
filter(hits != "NA", continent != "NA") %>%
summarise(total = sum(hits)) %>%
ggplot(aes(x = reorder(continent, -total), y = total)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Hits")
x %>%
group_by(continent) %>%
mutate(pageviews = as.numeric(pageviews)) %>%
filter(pageviews != "NA", continent != "NA") %>%
summarise(average = mean(pageviews)) %>%
ggplot(aes(x = reorder(continent, -total), y = average)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Page Views")
x %>%
group_by(continent) %>%
mutate(pageviews = as.numeric(pageviews)) %>%
filter(pageviews != "NA", continent != "NA") %>%
summarise(average = mean(pageviews)) %>%
ggplot(aes(x = reorder(continent, -average), y = average)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Page Views")
x %>%
group_by(continent) %>%
mutate(hits = as.numeric(hits)) %>%
filter(hits != "NA", continent != "NA") %>%
summarise(average = mean(hits)) %>%
ggplot(aes(x = reorder(continent, -average), y = total)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Hits")
x %>%
group_by(continent) %>%
mutate(hits = as.numeric(hits)) %>%
filter(hits != "NA", continent != "NA") %>%
summarise(average = mean(hits)) %>%
ggplot(aes(x = reorder(continent, -average), y = average)) +
geom_bar(stat = "identity") +
xlab("Continent") +
ylab("Number of Hits")
x %>%
group_by(continent, browser) %>%
summarise(total = n()) %>%
top_n(5) %>%
ungroup() %>%
arrange(continent, desc(total)) %>%
filter(continent != "NA") %>%
ggplot(aes(x = reorder(browser,-total), y = total)) +
geom_bar(stat = "identity") +
facet_grid(~continent) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
xlab("Continent") +
ylab("Number of browser")
x %>%
group_by(continent, deviceCategory) %>%
summarise(total = n()) %>%
arrange(desc(total)) %>%
filter(continent != "NA") %>%
ggplot(aes(x = reorder(deviceCategory, -total), y = total)) +
geom_bar(stat = "identity") +
facet_grid(~continent) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
xlab("Continent") +
ylab("Number of Device Category")
ggplot(data=x,aes(reorder(channelGrouping,rep(1,length(channelGrouping)),sum)))+geom_bar()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+ labs(x="channelGrouping", y = "visits")
ggplot(data=x,aes(reorder(deviceCategory,rep(1,length(deviceCategory)),sum)))+geom_bar()+
labs(x="deviceCategory", y = "visits")
x %>%
count(browser, sort=TRUE) %>%
top_n(5) %>%
mutate(browser=reorder(browser, n)) %>%
ggplot(aes(x=browser, y=n)) +
geom_col()+ labs(y = "visits")
data_w %>%
group_by(channelGrouping) %>%
summarize(total_revenue = sum(y)) %>%
mutate(channelGrouping=reorder(channelGrouping, total_revenue)) %>%
ggplot(aes(channelGrouping, log(total_revenue))) +
geom_bar(stat = "identity")
data_w %>%
group_by(deviceCategory) %>%
summarize(total_revenue = sum(y)) %>%
mutate(deviceCategory=reorder(deviceCategory, total_revenue)) %>%
ggplot(aes(deviceCategory, log(total_revenue))) +
geom_bar(stat = "identity")
data_w %>%
group_by(browser) %>%
summarize(total_revenue = sum(y)) %>%
top_n(5) %>%
mutate(browser=reorder(browser, log(total_revenue))) %>%
ggplot(aes(x=browser, y=total_revenue)) +
geom_bar(stat = "identity")
data_w %>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line() +
geom_smooth()
data_w %>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(revenue = mean(y)) %>%
ggplot(aes(x = date, y = log(revenue))) +
geom_line() +
stat_smooth()
data_w %>%
filter(channelGrouping == "Organic Search")%>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line() + geom_smooth()
data_w %>%
filter(channelGrouping == "Referral")%>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line() + geom_smooth()
data_w %>%
filter(deviceCategory == "tablet")%>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line()+ geom_smooth()
unique(data_w$deviceCategory)
data_w %>%
filter(deviceCategory == "desktop")%>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line()+ geom_smooth()
data_w %>%
filter(deviceCategory == "mobile")%>%
mutate(date = ymd(date))%>%
group_by(date) %>%
dplyr::summarize(visits = n()) %>%
ggplot(aes(x = date, y = visits)) +
geom_line()+ geom_smooth()
